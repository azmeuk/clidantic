[tool.poetry]
authors = ["Edoardo Arnaudo <edoardo.arn@gmail.com>"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Topic :: Software Development",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Typing :: Typed",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
]
description = "Typed Command Line Interfaces powered by Click and Pydantic"
homepage = "https://github.com/edornd/clidantic"
license = "MIT"
name = "clidantic"
readme = "README.md"
repository = "https://github.com/edornd/clidantic"
version = "0.0.0"

[tool.poetry.dependencies]
click = "^8.1.0"
pydantic = "^1.9.0"
python = "^3.8"

[tool.poetry.group.dev.dependencies]
black = "^22.6.0"
coverage = "^6.1.2"
flake8 = "^4.0.1"
isort = "^5.10.1"
mdx-include = "^1.4.2"
mkdocs = "^1.3.1"
mkdocs-material = "^8.3.9"
mypy = "^0.910"
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pytest-xdist = "^2.5.0"
tox = "^4.14.2"

[tool.poetry-dynamic-versioning]
enable = true

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310"]

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
known_third_party = ["click", "pydantic"]
line_length = 120
multi_line_output = 3
profile = "black"
use_parentheses = true

[tool.pytest.ini_options]
addopts = "-ra"
log_cli = true
log_cli_level = "info"
minversion = "6.0"
testpaths = ["tests"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
skipsdist = true
envlist =
    py38
    py39
    py310
    py311
    py312
    doc
    coverage

[testenv]
allowlist_externals = poetry
commands =
    poetry install
    poetry run pytest {posargs}

[testenv:doc]
commands =
    poetry install
    poetry run mkdocs build

[testenv:coverage]
commands =
    poetry install
    poetry run pytest --cov --cov-report term:skip-covered {posargs:-n auto}
    poetry run coverage html
"""
